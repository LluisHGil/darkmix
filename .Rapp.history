par(mar=c(6,6,0,0))#
    plot(aic[,1]+1, aic[,2], type="b", ylim=c(800,3700), pch=1, lwd=3, cex=4, #
    xlab=italic(c) ~": number of components", ylab="",cex.lab=2, cex.axis=2, xaxt="n")#
    points(aic[,1]+1, -aic[,4], type="b", pch=2, lwd=3, cex=4, xaxt="n")#
    points(aic[,1]+1, -aic[,3], type="b", pch=4, lwd=3, cex=4, xaxt="n")#
    axis(side=1, at=aic[,1]+1, labels = TRUE, cex.axis=2)#
    legend(11.5, 2750, legend=c("Max Likelihood", "-AIC", "-BIC"), pch=c(1,4,2), cex=2)#
    xlim(5:11)
par(mar=c(6,6,0,0))#
    plot(aic[,1]+1, aic[,2], type="b", ylim=c(800,3700), pch=1, lwd=3, cex=4, #
    xlab=italic(c) ~": number of components", ylab="",cex.lab=2, cex.axis=2, xaxt="n")#
    points(aic[,1]+1, -aic[,4], type="b", pch=2, lwd=3, cex=4, xaxt="n")#
    points(aic[,1]+1, -aic[,3], type="b", pch=4, lwd=3, cex=4, xaxt="n")#
    axis(side=1, at=aic[,1]+1, labels = TRUE, cex.axis=2)#
    legend(11.5, 2750, legend=c("Max Likelihood", "-AIC", "-BIC"), pch=c(1,4,2), cex=2)#
    xlimit(5:11)
png("aic.png", width=880, height=660)#
    par(mar=c(6,6,0,0))#
    plot(aic[,1]+1, aic[,2], type="b", ylim=c(800,3700), pch=1, lwd=3, cex=4, #
    xlab=italic(c) ~": number of components", ylab="",cex.lab=2, cex.axis=2, xaxt="n", xlim=c(5,11))#
    points(aic[,1]+1, -aic[,4], type="b", pch=2, lwd=3, cex=4, xaxt="n")#
    points(aic[,1]+1, -aic[,3], type="b", pch=4, lwd=3, cex=4, xaxt="n")#
    axis(side=1, at=aic[,1]+1, labels = TRUE, cex.axis=2)#
    legend(11.5, 2750, legend=c("Max Likelihood", "-AIC", "-BIC"), pch=c(1,4,2), cex=2)#
  dev.off()
aic
png("aic.png", width=880, height=660)#
    par(mar=c(6,6,0,0))#
    plot(aic[2:12,1]+1, aic[,2], type="b", ylim=c(800,3700), pch=1, lwd=3, cex=4, #
    xlab=italic(c) ~": number of components", ylab="",cex.lab=2, cex.axis=2, xaxt="n", xlim=c(5,11))#
    points(aic[2:12,1]+1, -aic[,4], type="b", pch=2, lwd=3, cex=4, xaxt="n")#
    points(aic[2:12,1]+1, -aic[,3], type="b", pch=4, lwd=3, cex=4, xaxt="n")#
    axis(side=1, at=aic[2:12,1]+1, labels = TRUE, cex.axis=2)#
    legend(11.5, 2750, legend=c("Max Likelihood", "-AIC", "-BIC"), pch=c(1,4,2), cex=2)#
  dev.off()
png("aic.png", width=880, height=660)#
    par(mar=c(6,6,0,0))#
    plot(aic[2:12,1]+1, aic[2:12,2], type="b", ylim=c(800,3700), pch=1, lwd=3, cex=4, #
    xlab=italic(c) ~": number of components", ylab="",cex.lab=2, cex.axis=2, xaxt="n", xlim=c(5,11))#
    points(aic[2:12,1]+1, -aic[2:12,4], type="b", pch=2, lwd=3, cex=4, xaxt="n")#
    points(aic[2:12,1]+1, -aic[2:12,3], type="b", pch=4, lwd=3, cex=4, xaxt="n")#
    axis(side=1, at=aic[2:12,1]+1, labels = TRUE, cex.axis=2)#
    legend(11.5, 2750, legend=c("Max Likelihood", "-AIC", "-BIC"), pch=c(1,4,2), cex=2)#
  dev.off()
png("aic.png", width=880, height=660)#
    par(mar=c(6,6,0,0))#
    plot(aic[2:12,1]+1, aic[2:12,2], type="b", ylim=c(800,3700), pch=1, lwd=3, cex=4, #
    xlab=italic(c) ~": number of components", ylab="",cex.lab=2, cex.axis=2, xaxt="n", xlim=c(5,15))#
    points(aic[2:12,1]+1, -aic[2:12,4], type="b", pch=2, lwd=3, cex=4, xaxt="n")#
    points(aic[2:12,1]+1, -aic[2:12,3], type="b", pch=4, lwd=3, cex=4, xaxt="n")#
    axis(side=1, at=aic[2:12,1]+1, labels = TRUE, cex.axis=2)#
    legend(11.5, 2750, legend=c("Max Likelihood", "-AIC", "-BIC"), pch=c(1,4,2), cex=2)#
  dev.off()
param
arg <- list(clust=clust, quad=quad)#
pop <- mixture.model(param,param2,output=c(),action.pop, arg)
pop
sum(pop)
round(pop)
sum(round(pop))
members <- membership(param, param2, mixture.model, clust, TRUE, 880, 880)
members
head(members)
n <- length(clust$data$x)#
  k <- param2[[1]]#
  arg = list(x1=clust$data$x,y1=clust$data$y,z1=clust$data$z)#
  output=matrix(NA,n,param2[[1]])#
  prob <- mixture.model(param=param,param2=param2,output,action.member,arg)#
  prob <- t(apply(prob, 1, function(x)(x/sum(x))))#
  names <- c("p1")
n
k
head(prob)
sum(prob[1,])
for(i in 2:k) {names <- c(names, paste("p",i, sep=""))}#
  class <- c()
head(prob)
names
i <- 1
which.max(rmultinom(1,1,prob[i,]))
which.max(rmultinom(1,1,prob[3,]))
which.max(rmultinom(1,1,prob[3,]))
which.max(rmultinom(1,1,prob[3,]))
head(prob)
prob[1,]
prob[1,] < 0.1
sum(prob[1,] < 0.1)
k
membership_thr <- function(param, param2, model, clust, threshold=0, print=TRUE, w=880, h=880) {#
  n <- length(clust$data$x)#
  k <- param2[[1]]#
  arg = list(x1=clust$data$x,y1=clust$data$y,z1=clust$data$z)#
  output=matrix(NA,n,param2[[1]])#
  prob <- mixture.model(param=param,param2=param2,output,action.member,arg)#
  prob <- t(apply(prob, 1, function(x)(x/sum(x))))#
  names <- c("p1")#
  for(i in 2:k) {names <- c(names, paste("p",i, sep=""))}#
  class <- c()#
  for(i in 1:n) {#
  	if (sum(prob[i,] < threshold) == k) {#
  		class[i] <- k#
  	}#
  	else {#
	    class[i] <- which.max(rmultinom(1,1,prob[i,]))  		#
  	}#
  }#
  ret <- cbind(prob,class)#
  colnames(ret) <- c(names,"class")#
  ret <- as.data.frame(ret)#
  if(print==TRUE) {#
    name <- "classification.png"#
    png(name, width = w, height = h) #
    par(mar=c(0,0,0,0))#
  }#
  clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class)#
  plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k+1), col=1:(k+1), pch=16), main="")#
  if(print==TRUE){dev.off()}#
  return(ret)#
}
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.1, TRUE, 880, 880)
table(members$class)
table(members_hr$class)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.2, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.2, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.2, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.1, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.8, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.6, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.5, TRUE, 880, 880)
table(members_thr$class)
members_thr <- membership_thr(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
table(members_thr$class)
sum(prob[i,] < threshold)
sum(prob[i,] < 0.4)
prod(prob[i,] < 0.4)
prod(prob[i,] < 0.1)
prod(prob[i,] < 0)
prod(prob[i,] < 1)
prod(prob[i,] > 1)
prod(prob[i,] > 0.6)
prod(prob[i,] > 0)
any(prob[i,] > 0)
any(prob[i,] > 0.6)
any(prob[i,] > 1)
any(prob[i,] < 1)
any(prob[i,] < 0.6)
any(prob[i,] < 0.2)
all(prob[i,] < 0.2)
all(prob[i,] < 0)
prob[i,]
all(prob[i,] < 0.97)
membership <- function(param, param2, model, clust, threshold=0, print=TRUE, w=880, h=880) {#
  n <- length(clust$data$x)#
  k <- param2[[1]]#
  arg = list(x1=clust$data$x,y1=clust$data$y,z1=clust$data$z)#
  output=matrix(NA,n,param2[[1]])#
  prob <- mixture.model(param=param,param2=param2,output,action.member,arg)#
  prob <- t(apply(prob, 1, function(x)(x/sum(x))))#
  names <- c("p1")#
  for(i in 2:k) {names <- c(names, paste("p",i, sep=""))}#
  class <- c()#
  for(i in 1:n) {#
  	if (all(prob[i,] < threshold)) {#
  		class[i] <- k#
  	}#
  	else {#
	    class[i] <- which.max(rmultinom(1,1,prob[i,]))  		#
  	}#
  }#
  ret <- cbind(prob,class)#
  colnames(ret) <- c(names,"class")#
  ret <- as.data.frame(ret)#
  if(print==TRUE) {#
    name <- "classification.png"#
    png(name, width = w, height = h) #
    par(mar=c(0,0,0,0))#
  }#
  clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class)#
  plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k+1), col=1:(k+1), pch=16), main="")#
  if(print==TRUE){dev.off()}#
  return(ret)#
}
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
threshold = 0.45
n <- length(clust$data$x)#
  k <- param2[[1]]#
  arg = list(x1=clust$data$x,y1=clust$data$y,z1=clust$data$z)#
  output=matrix(NA,n,param2[[1]])#
  prob <- mixture.model(param=param,param2=param2,output,action.member,arg)#
  prob <- t(apply(prob, 1, function(x)(x/sum(x))))#
  names <- c("p1")#
  for(i in 2:k) {names <- c(names, paste("p",i, sep=""))}#
  class <- c()#
  for(i in 1:n) {#
  	if (all(prob[i,] < threshold)) {#
  		class[i] <- k#
  	}#
  	else {#
	    class[i] <- which.max(rmultinom(1,1,prob[i,]))  		#
  	}#
  }#
  ret <- cbind(prob,class)#
  colnames(ret) <- c(names,"class")#
  ret <- as.data.frame(ret)
ret
head(ret)
k
symbolmap(inputs=1:(k+1), col=1:(k+1), pch=16)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class)#
#  symbol_pch = re#
  plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k+1), col=1:(k+1), pch=1:(k+1)), main="")
k
plot(clust2d)
plot(clust2d, use.marks=TRUE)
plot(clust2d, use.marks=FALSE)
symap
plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k+1), col=1:(k+1), pch=1:(k+1)), main="")
k
plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k), col=1:(k), pch=1:(k)), main="")
symbolmap(inputs=1:(k), col=1:(k), pch=1:(k))
unique(ret$class)
clust2d$marks
class(clust2d$marks)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=factor(ret$class))#
  plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k+1), col=1:(k+1), pch=1:(k+1)), main="")
dev.off()
dev.off()
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=factor(ret$class))#
  plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:(k+1), col=1:(k+1), pch=1:(k+1)), main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=factor(ret$class))
clust2d
plot(clust2d)
plot(clust2d, use.marks=TRUE, symap=symbolmap(inputs=1:k, col=1:k, pch=16), main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=factor(ret$class))#
  ra <- 1:k#
  colmap <- colourmap(terrain.colors(20), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
ra
ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(20), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
sy
ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
sy
plot(clust2d, use.marks=TRUE, symap=sy)
plot(clust2d, use.marks=TRUE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class)
plot(clust2d, use.marks=TRUE, symap=sy)
sy
ra <- range(marks(longleaf))#
   colmap <- colourmap(terrain.colors(20), range=ra)#
   ## filled plot characters are the codes 21-25#
   ## fill colour is indicated by 'bg'#
   sy <- symbolmap(pch=21, bg=colmap, range=ra)#
   plot(longleaf, symap=sy
)
ra
colmap
sy
plot(clust2d, symap=sy)
ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(inputs=1:k, pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(inputs=1:k, pch=16, bg=colmap) #, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
dev.off()
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(inputs=1:k, pch=16, bg=colmap) #, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
sy
ra <- range(marks(longleaf))#
   colmap <- colourmap(terrain.colors(20), range=ra)#
   ## filled plot characters are the codes 21-25#
   ## fill colour is indicated by 'bg'#
   sy <- symbolmap(pch=21, bg=colmap, range=ra)#
   plot(longleaf, symap=sy
)
ra
colmap
sy
longleaf$marks
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class*1.0) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(inputs=1:k, pch=16, bg=colmap) #, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class*1.0) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(pch=16, bg=colmap, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class*1.0) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
  sy = symbolmap(pch=16, bg=1:k, range=ra)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class*1.0) #factor(ret$class))#
  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), range=ra)#
#  sy = symbolmap(pch=16, bg=1:k, range=ra)#
  sy = symbolmap(inputs=1:(k+1), col=1:(k+1), pch=16)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class*1.0) #factor(ret$class))#
#  ra <- c(1,k)#
  colmap <- colourmap(terrain.colors(k), inputs=1:k)#
  sy = symbolmap(pch=16, bg=colmap, inputs=1:k)#
#  sy = symbolmap(inputs=1:k, col=1:k, pch=16)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
colmap
sy
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
#  ra <- c(1,k)#
#  colmap <- colourmap(terrain.colors(k), inputs=1:k)#
#  sy = symbolmap(pch=16, bg=colmap, inputs=1:k)#
  if (k < 9) {p_type=16}#
  else {p_type <- c(rep(16, 9), rep(2, k-9))}#
  sy = symbolmap(inputs=1:k, col=1:k, pch=p_type)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
if (k < 9) {#
  	p_type=16#
  }#
  else {#
  	p_type <- c(rep(16, 9), rep(2, k-9))#
  }
if (k < 9) {#
  	p_type=16#
  }#
  else#
  	p_type <- c(rep(16, 9), rep(2, k-9))
if (k < 9) {#
  	p_type=16#
  } else {#
  	p_type <- c(rep(16, 9), rep(2, k-9))#
  }#
  sy = symbolmap(inputs=1:k, col=1:k, pch=p_type)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
if (k < 9) {p_type=16} else {p_type <- c(rep(16, 9), rep(2, k-8))}#
  sy = symbolmap(inputs=1:k, col=1:k, pch=p_type)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  if (k < 9) {p_type=16} else {p_type <- c(rep(16, 8), rep(2, k-8))}#
  sy = symbolmap(inputs=1:k, col=1:k, pch=p_type)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="")
plot(1:4,pch=1)
plot(1:4,pch=3)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  if (k < 9) {p_type=16} else {p_type <- c(rep(16, 8), rep(3, k-8))}#
  sy = symbolmap(inputs=1:k, col=1:k, pch=p_type)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="", legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #factor(ret$class))#
  if (k < 9) {p_type=16} else {p_type <- c(rep(16, 8), rep(3, k-8))}#
#  sy = symbolmap(inputs=1:k, col=1:k, pch=p_type)#
  sy = symbolmap(inputs=1:k, bg=colourmap(terrain.colors(k), inputs=1:k),  pch=p_type)#
  plot(clust2d, use.marks=TRUE, symap=sy, main="", legend=FALSE)
sy
colourmap(terrain.colors(k), inputs=1:k)
sy$bg
symbolmap(inputs=1:k, bg=colourmap(terrain.colors(k), inputs=1:k),  pch=p_type)
p_type
colourmap(terrain.colors(k), inputs=1:k)
colmap <- colourmap(terrain.colors(20), range=ra)#
   ## filled plot characters are the codes 21-25#
   ## fill colour is indicated by 'bg'#
   sy <- symbolmap(pch=21, bg=colmap, range=ra)
ra
colmap <- colourmap(terrain.colors(20), inputs=1:20)#
   ## filled plot characters are the codes 21-25#
   ## fill colour is indicated by 'bg'#
   sy <- symbolmap(pch=21, bg=colmap, inputs=1:20)
colmap
sy
plot(longleaf, symap=sy)
colmap <- colourmap(terrain.colors(k), inputs=1:k)#
sy <- symbolmap(pch=21, bg=colmap, inputs=1:k)#
plot(clust2d, symap=sy)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(terrain.colors(k), inputs=1:k)#
  sy <- symbolmap(pch=21, fg=colmap, inputs=1:k)#
  plot(clust2d, symap=sy)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(terrain.colors(k), inputs=1:k)#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:k)#
  plot(clust2d, symap=sy)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow.colors(k), inputs=1:k)#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:k)#
  plot(clust2d, symap=sy)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k), inputs=1:k)#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:k)#
  plot(clust2d, symap=sy)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k), inputs=1:k)#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:k)#
  plot(clust2d, symap=sy, legend=FALSE)
colmap
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k), inputs=1:k)#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:k)#
  plot(clust2d, symap=sy, legend=FALSE)
cm <- colormap(expand.grid(1:11, 1:11)[,1], breaks=seq(-90, 90, 10), col=oceColorsViridis)
cm <- colourmap(expand.grid(1:11, 1:11)[,1], breaks=seq(-90, 90, 10), col=oceColorsViridis)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k), inputs=1:(k+1))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+1))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+1), inputs=1:(k+1))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+1))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+2), inputs=1:(k+2))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+2))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+1), inputs=1:(k+1))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+1))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k), inputs=1:(k+1))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+1))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k), inputs=1:(k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+k), inputs=1:(k+k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+k))#
  plot(clust2d, symap=sy, legend=FALSE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+k), inputs=1:(k+k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+k))#
  plot(clust2d, symap=sy, legend=FALSE)#
  colorlegend(colmap)
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),#
       text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),#
       merge = TRUE, bg = "gray90")
colmap <- colourmap(rainbow(k+k), inputs=1:(k+k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+k))#
  plot(clust2d, symap=sy, legend=FALSE)#
  legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),#
       text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),#
       merge = TRUE, bg = "gray90")
colmap <- colourmap(rainbow(k+k), inputs=1:(k+k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+k))#
  plot(clust2d, symap=sy)#
  legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),#
       text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),#
       merge = TRUE, bg = "gray90")
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+k), inputs=1:(k+k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+k))#
  plot(clust2d, symap=sy, legend=TRUE)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE)
plot.ppp()
plot.ppp
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, leg.args=1:4)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k)
clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k+5)
g <- symbolmap(inputs=letters[1:10], pch=11:20)#
  plot(g)
g <- symbolmap(inputs=letters[1:10], pch=11:20)#
  plot(g, nsymbols=4)
g <- symbolmap(inputs=letters[1:10], pch=11:20)#
  plot(g, nsymbols=12)
g <- symbolmap(inputs=letters[1:10], pch=11:20)#
  plot(g, nsymbols=14)
colmap <- colourmap(rainbow(k), inputs=1:(k))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k)
colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k+k)#
  if(print==TRUE){dev.off()}
plot(clust2d, symap=sy, legend=TRUE, nsymbols=k+1)
plot(clust$data$x, clust$data$y, pch=16, col=1:k)
membership <- function(param, param2, model, clust, threshold=0, print=TRUE, w=880, h=880) {#
  n <- length(clust$data$x)#
  k <- param2[[1]]#
  arg = list(x1=clust$data$x,y1=clust$data$y,z1=clust$data$z)#
  output=matrix(NA,n,param2[[1]])#
  prob <- mixture.model(param=param,param2=param2,output,action.member,arg)#
  prob <- t(apply(prob, 1, function(x)(x/sum(x))))#
  names <- c("p1")#
  for(i in 2:k) {names <- c(names, paste("p",i, sep=""))}#
  class <- c()#
  for(i in 1:n) {#
  	if (all(prob[i,] < threshold)) {#
  		class[i] <- k#
  	}#
  	else {#
	    class[i] <- which.max(rmultinom(1,1,prob[i,]))  		#
  	}#
  }#
  ret <- cbind(prob,class)#
  colnames(ret) <- c(names,"class")#
  ret <- as.data.frame(ret)#
  if(print==TRUE) {#
    name <- "classification.png"#
    png(name, width = w, height = h) #
    par(mar=c(0,0,0,0))#
  }#
  clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k+1)#
  if(print==TRUE){dev.off()}#
  return(ret)#
}
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
if(print==TRUE) {#
    name <- "classification.png"#
    png(name, width = w, height = h) #
    par(mar=c(0,0,0,0))#
  }#
  clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k+1, main="")#
  if(print==TRUE){dev.off()}
print
print <- TRUE
if(print==TRUE) {#
    name <- "classification.png"#
    png(name, width = w, height = h) #
    par(mar=c(0,0,0,0))#
  }#
  clust2d <- ppp(x=clust$data$x, y=clust$data$y, #
                 window=owin(xrange=clust$domain$xrange, yrange=clust$domain$yrange),#
                 marks=ret$class) #
  colmap <- colourmap(rainbow(k+5), inputs=1:(k+5))#
  sy <- symbolmap(pch=21, bg=colmap, inputs=1:(k+5))#
  plot(clust2d, symap=sy, legend=TRUE, nsymbols=k+1, main="")#
  if(print==TRUE){dev.off()}
source("Code/darkmix.R")
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
membership
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
membership
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
setwd("~/Documents/Science/darkmix/GitHub/darkmix/")#
	source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
source("Code/darkmix.R")
members <- membership(param, param2, mixture.model, clust, threshold=0.45, TRUE, 880, 880)
!FALSE
sigma <- 1:4
rnorm(10,0,sigma)
